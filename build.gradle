repositories {
    mavenCentral()
    mavenLocal()
    jcenter()

    maven {
        name 'jboss-nexus'
        url "http://repository.jboss.org/nexus/content/groups/public/"
    }
    maven {
        name "jboss-snapshots"
        url "http://snapshots.jboss.org/maven2/"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

version = '1.0'

sourceSets {
    test {
        // send javac output and resource copying to the same output directory
        // so pax exam can more easily find it
        output.classesDir = "${buildDir}/classes/test"
        output.resourcesDir = output.classesDir
    }
}

configurations {
	karafDistro {
		description = 'Configuration used to isolate the dependency on the Karaf distro'
		transitive = false
	}
}

ext {
	// MUST use 4.3.1!  4.3.0 was compiled with "-target jsr14".
	// http://blog.osgi.org/2012/10/43-companion-code-for-java-7.html
	osgiCoreVersion = '4.3.1'
	karafVersion = '3.0.3'
	paxExamVersion = '4.4.0'
	paxUrlVersion = '2.4.1'
}

dependencies {

    compile "org.osgi:org.osgi.core:${osgiCoreVersion}"
    compile "org.osgi:org.osgi.compendium:${osgiCoreVersion}"

    testCompile "org.ops4j.pax.exam:pax-exam:${paxExamVersion}"
    testCompile "org.ops4j.pax.exam:pax-exam-junit4:${paxExamVersion}"
    testCompile "org.ops4j.pax.exam:pax-exam-container-karaf:${paxExamVersion}"
    // Need this explicitly in order to use @Inject -> shouldn't this be a transtive dep of pax-exam?
    //      is there ever a pax exam test that *does not* use this?
	testCompile 'javax.inject:javax.inject:1'

	testCompile( "org.apache.karaf:apache-karaf:${karafVersion}" ) {
		// having trouble finding this one locally
		exclude group: 'org.eclipse', module: 'org.eclipse.osgi'
	}

	karafDistro "org.apache.karaf:apache-karaf:${karafVersion}@tar.gz"


    // Starting the Karaf container needs this.  Again, no idea why this would not be a
    //      provided dep already
//    testRuntime "org.ops4j.pax.url:pax-url-aether:${paxUrlVersion}"

    // in my experience these are needed too...
    testRuntime "org.slf4j:slf4j-api:1.7.5"
    testRuntime "org.slf4j:slf4j-log4j12:1.7.5"
    testRuntime "org.jboss.logmanager:jboss-logmanager:2.0.0.Beta1"
    testRuntime "com.h2database:h2:1.3.170"
    testRuntime "org.ops4j.pax.tinybundles:tinybundles:2.1.0"

    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    testCompile 'org.hibernate:hibernate-entitymanager:5.0.0-SNAPSHOT'
    testCompile 'org.hibernate:hibernate-osgi:5.0.0-SNAPSHOT'
}

task generatePaxExamEnvironmentFile {
	// I found this better/easier than duplicating information...
	description = 'Generates a Properties file that the Pax Exam test can access to know information about the test environment'

	File outputFile = new File( sourceSets.test.output.resourcesDir, 'pax-exam-environment.properties' )
	File karafUnpackDirectory = file( "${buildDir}/karaf-unpack" )

	// set up up-to-date checks
	inputs.files( configurations.testRuntime )
	inputs.property( 'karafUnpackDirectory', karafUnpackDirectory )
	outputs.file( outputFile )

	doFirst {
		// should only be one artifacts..
		File karafDistroFile = configurations.karafDistro.resolvedConfiguration.resolvedArtifacts[0].file

		Properties properties = new Properties();
		properties.setProperty( 'org.ops4j.pax.exam.container.karaf.distroUrl', karafDistroFile.toURI().toURL().toExternalForm() )
		properties.setProperty( 'org.ops4j.pax.exam.container.karaf.unpackDir', karafUnpackDirectory.absolutePath )
		properties.setProperty( 'org.ops4j.pax.exam.container.karaf.version', karafVersion as String )
		properties.setProperty( 'org.ops4j.pax.exam.container.karaf.probe.classesDir', sourceSets.test.output.classesDir.absolutePath )
		properties.setProperty( 'org.ops4j.pax.exam.container.karaf.probe.resourcesDir', sourceSets.test.output.resourcesDir.absolutePath )

		outputFile.parentFile.mkdirs()

		FileOutputStream outputStream = new FileOutputStream( outputFile );
		try {
			properties.store( outputStream, "Generated from Gradle by Hibernate build for PaxExam testing of hibernate-osgi module" )
		}
		finally {
			outputStream.close()
		}
	}
}

tasks.test.dependsOn tasks.generatePaxExamEnvironmentFile
//tasks.test.classpath += configurations.karaf

idea {
	module {
		downloadSources = true
	}
}


